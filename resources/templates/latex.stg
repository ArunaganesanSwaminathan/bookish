delimiters "<",">"


header() ::= <<
\documentclass[11pt]{article}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage[fleqn]{amsmath}
\usepackage{epstopdf}
\DeclareGraphicsRule{.tif}{png}{.png}{`convert #1 `dirname #1`/`basename #1 .tif`.png}

\textwidth = 6.5 in
\textheight = 9 in
\oddsidemargin = 0.0 in
\evensidemargin = 0.0 in
\topmargin = 0.0 in
\headheight = 0.0 in
\headsep = 0.0 in
\parskip = 0.2in
\parindent = 0.0in

\newtheorem{theorem}{Theorem}
\newtheorem{corollary}[theorem]{Corollary}
\newtheorem{definition}{Definition}

\newcommand{\cut}[1]{}

\allowdisplaybreaks

\hypersetup{
    colorlinks=true,
    linkcolor=blue,
    urlcolor=blue
}

\urlstyle{same}
\title{<model.title>}
\author{<author>}
\begin{document}
\maketitle

>>

footer() ::= <<
<\n>
\end{document}
>>

Book(model) ::= <<
<header()>
\tableofcontents

\title{<model.title>}

\author{<model.author>}

<footer()>
>>


Document(model, chapter) ::= <<
<header()>
<chapter>
<footer()>
>>

Chapter(model, author, preabstract, abstract_, elements, subcontainers) ::= <<

<preabstract>

<abstract_>

\pagebreak
{\small \setlength{\parskip}{0pt} \tableofcontents}
\pagebreak

<elements>

<subcontainers>

>>

Author(model, author) ::= "<author>"

PreAbstract(model, elements) ::= "<elements>"

Abstract(model, elements) ::= <<
\begin{abstract}
<elements>
\end{abstract}
>>

Section(model, elements, subcontainers) ::= <<
\section{<model.title>}\label{<model.anchor>}

<elements>

<subcontainers>
>>

SubSection(model, elements, subcontainers) ::= <<
\subsection{<model.title>}\label{<model.anchor>}

<elements>

<subcontainers>
>>

SubSubSection(model, elements, subcontainers) ::= <<
\subsubsection{<model.title>}\label{<model.anchor>}

<elements>

<subcontainers>
>>

Block(model,elements) ::= "<elements>"

SideQuote(model,quote,author) ::= "<model.def.index>\,``<quote>'' --- <author>"

Citation(model,title,bibinfo) ::= "<model.def.index>\,``<title>'' --- <bibinfo>"

ChapQuote(model,quote,author) ::= "``<quote>'' --- <author>"

Site(model) ::= "<model.def.index> <model.def.website>"

SideFigure(model, code, caption) ::= <<
<code>Figure <model.def.index>. <caption>
>>

SiteRef(model) ::= "<model.def.index><model.def.template>"
CitationRef(model) ::= "<model.def.index><model.def.template>"
FigureRef(model) ::= "Figure <model.def.index><model.def.template>"
SideNoteRef(model) ::= "<model.def.index><model.def.template>"
SideQuoteRef(model) ::= "<model.def.index><model.def.template>"
SectionRef(model) ::= "Section <model.def.containerNumber> <model.def.model.title>"
ChapterRef(model) ::= "Chapter <model.def.containerNumber> <model.def.model.title>"

OrderedList(model, items) ::= <<
\begin{enumerate}
<items>
\end{enumerate}
>>

UnOrderedList(model, items) ::= <<
\begin{itemize}
<items>
\end{itemize}
>>

ListItem(model, elements) ::= "\item <elements>"

Table(model, headers, rows) ::= <<

\begin{tabular}{<headers.items:{th | <if(th.model.widthPercentage)>p{0.<th.model.widthPercentage>\linewidth\}<else>l<endif>}>}
<headers>
<rows>
\end{tabular}

>>

TableRow(model, items) ::= <<
<items; separator="&">\\\\<\n>
>>

TableItem(model, contents) ::= "<contents>"

TableHeaderItem(model, contents) ::= "{\bf <contents>}"

Paragraph(model, elements) ::= "<\n><elements><\n>"

InlineImage(model) ::= <<
\includegraphics{<model.src>}
>>


Image(model) ::= <<
\begin{center}
\includegraphics{<model.attrs.src>}
\end{center}
>>

BlockImage(model) ::= <<

\begin{center}
\includegraphics{<model.attrs.src>}
\end{center}

>>

XMLTag(model) ::= <<
>>

XMLEndTag(model) ::= ""

Latex(model) ::= <<
\begin{center}
<model.text>
\end{center}
>>

BlockEquation(model) ::= <<
\[<model.eqn>\]
>>

InlineEquation(model) ::= "$<model.eqn>$"

EqnVar(model) ::= "$<model.varname>$"

EqnIndexedVar(model) ::= "$<model.varname>_<model.indexname>$"

EqnVecVar(model) ::= "$\mathbf{<model.varname>}$"

EqnIndexedVecVar(model) ::= "$\mathbf{<model.varname>}_<model.indexname>$"

HyperLink(model) ::= <<
\href{<model.href; format="url-title-escape">}{<model.title; format="url-escape">}
>>

Quoted(model, elements) ::= "``<elements>''"

Bold(model) ::= "{\bf <model.text>}"

Italics(model) ::= "{\em <model.text>}"

Other(model) ::= <<
<model.text; format="url-title-escape">
>>

Join(model, elements) ::= "<elements>"